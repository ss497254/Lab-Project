{"version":3,"sources":["app/Documentation/index.js"],"names":["Documentation","className","style","gap","href","id","lineHeight","color","src","alt","width","height","padding"],"mappings":"kGAAA,mEAEe,SAASA,IACpB,OACI,6BACI,yBAAKC,UAAU,iCACX,yBAAKA,UAAU,MAAMC,MAAO,CAAEC,IAAK,KAC/B,yBAAKF,UAAU,iDACX,wBAAIA,UAAU,kCAAd,iBAGA,wBAAIA,UAAU,aACV,wBAAIA,UAAU,QACV,uBAAGG,KAAK,gBACJ,6CAGR,wBAAIH,UAAU,QACV,uBAAGG,KAAK,kBACJ,+CAGR,wBAAIH,UAAU,QACV,uBAAGG,KAAK,wBACJ,qDAGR,wBAAIH,UAAU,QACV,uBAAGG,KAAK,qBACJ,kDAGR,wBAAIH,UAAU,QACV,uBAAGG,KAAK,wBACJ,qDAGR,wBAAIH,UAAU,QACV,uBAAGG,KAAK,mBACJ,kDAKhB,yBAAKH,UAAU,yCACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,mEAAd,2BAGA,wBAAIA,UAAU,qDAAd,wCAGA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,wBACII,GAAG,cACHJ,UAAU,qBAFd,gBAMA,wBACIA,UAAU,OACVC,MAAO,CACHI,WAAY,EACZC,MAAO,SAJf,qWAmBJ,yBAAKN,UAAU,aACX,wBACII,GAAG,gBACHJ,UAAU,qBAFd,kBAMA,wBACIA,UAAU,OACVC,MAAO,CACHI,WAAY,EACZC,MAAO,SAJf,6JAYI,wBAAIN,UAAU,QACV,8WAcA,wBAAIA,UAAU,QAAd,6XA3BR,wYAwDJ,yBAAKA,UAAU,aACX,wBACII,GAAG,sBACHJ,UAAU,qBAFd,wBAMA,yBACIO,IAAI,2EACJC,IAAI,uBACJC,MAAM,MACNC,OAAO,MACPT,MAAO,CACHU,QAAS,wBAGjB,wBACIX,UAAU,OACVC,MAAO,CACHI,WAAY,EACZC,MAAO,SAJf,6wCA4CJ,yBAAKN,UAAU,aACX,wBACII,GAAG,mBACHJ,UAAU,qBAFd,qBAMA,wBACIA,UAAU,OACVC,MAAO,CACHI,WAAY,EACZC,MAAO,SAJf,uaAqBJ,yBAAKN,UAAU,aACX,wBACII,GAAG,sBACHJ,UAAU,qBAFd,wBAMA,wBACIA,UAAU,OACVC,MAAO,CACHI,WAAY,EACZC,MAAO,SAJf,+PAcI,6BAdJ,uMAuBJ,yBAAKN,UAAU,kBACX,wBACII,GAAG,iBACHJ,UAAU,qBAFd,mBAMA,wBACIA,UAAU,OACVC,MAAO,CACHI,WAAY,EACZC,MAAO,SAJf,yLAYI,6BAZJ,8SAoBI,6BACA,6BArBJ,+FAyBI,wBAAIN,UAAU,aACV,wBAAIA,UAAU,QAAd,0GAMA,wBAAIA,UAAU,QAAd,0IAOA,wBAAIA,UAAU,QAAd,4IAvCR","file":"static/js/6.c2299b3d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Documentation() {\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid documentation\">\r\n                <div className=\"row\" style={{ gap: 50 }}>\r\n                    <div className=\"col-md-3 col-xl-2 left-sidebar py-4 my-4 pr-2\">\r\n                        <h2 className=\"left-menu-title text-dark mb-4\">\r\n                            Documentation\r\n                        </h2>\r\n                        <ul className=\"left-menu\">\r\n                            <li className=\"my-4\">\r\n                                <a href=\"#Description\">\r\n                                    <h4>Description</h4>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"my-4\">\r\n                                <a href=\"#Client-Server\">\r\n                                    <h4>Client Server</h4>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"my-4\">\r\n                                <a href=\"#Client-Server-Modal\">\r\n                                    <h4>Client Server Modal</h4>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"my-4\">\r\n                                <a href=\"#Page-Replacement\">\r\n                                    <h4>Page Replacement</h4>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"my-4\">\r\n                                <a href=\"#Least-Recently-Used\">\r\n                                    <h4>Least Recently Used</h4>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"my-4\">\r\n                                <a href=\"#Multithreading\">\r\n                                    <h4>Multithreading</h4>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-9 col-xl-9 main-panel bg-white\">\r\n                        <div className=\"main-panel-wrapper\">\r\n                            <h1 className=\"mt-4 text-center font-weight text-dark text-uppercase mb-4 pt-4\">\r\n                                Web based Client Server\r\n                            </h1>\r\n                            <h2 className=\"mt-4 text-center font-weight-light text-dark mb-4\">\r\n                                Operating Systems Lab – Project\r\n                            </h2>\r\n                            <div className=\"card grid\">\r\n                                <div className=\"card-body\">\r\n                                    <h3\r\n                                        id=\"Description\"\r\n                                        className=\"mb-4 text-primary\"\r\n                                    >\r\n                                        Description:\r\n                                    </h3>\r\n                                    <h4\r\n                                        className=\"px-4\"\r\n                                        style={{\r\n                                            lineHeight: 2,\r\n                                            color: '#888'\r\n                                        }}\r\n                                    >\r\n                                        We are making a web-based client server\r\n                                        model for keeping covid-19 related data.\r\n                                        This data will be sorted state wise and\r\n                                        wave wise. In the backend part we are\r\n                                        using page replacement for providing\r\n                                        faster access to data(web pages),\r\n                                        specifically Least Recently Used\r\n                                        algorithm for our web pages. So, let us\r\n                                        have a look at terminologies we are\r\n                                        going to use.\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <h3\r\n                                        id=\"Client-Server\"\r\n                                        className=\"mb-4 text-primary\"\r\n                                    >\r\n                                        Client Server:\r\n                                    </h3>\r\n                                    <h4\r\n                                        className=\"px-4\"\r\n                                        style={{\r\n                                            lineHeight: 2,\r\n                                            color: '#888'\r\n                                        }}\r\n                                    >\r\n                                        A client-server is a popular software\r\n                                        design architecture which, at an\r\n                                        abstract level, breaks down a software\r\n                                        into two parts: client-side and\r\n                                        server-side.\r\n                                        <ul className=\"my-4\">\r\n                                            <li>\r\n                                                The client-side (or simply,\r\n                                                client) is the application that\r\n                                                runs on the end-user computer;\r\n                                                it provides a user-interface\r\n                                                (UI) that handles what the\r\n                                                application feels and looks like\r\n                                                and how it interacts with\r\n                                                end-user. It may employ and\r\n                                                consume resources on the user's\r\n                                                machine (computing device) such\r\n                                                as temporary and local storage,\r\n                                                etc.\r\n                                            </li>\r\n                                            <li className=\"my-4\">\r\n                                                The server-side (or simply,\r\n                                                server) is the application that\r\n                                                receives requests from the\r\n                                                clients, and contains the logic\r\n                                                to send the appropriate data\r\n                                                back to the client. Instead of\r\n                                                user-interface, the server\r\n                                                usually has an application\r\n                                                programming interface (API).\r\n                                                Moreover, the server often\r\n                                                includes a database, which will\r\n                                                persistently store all of the\r\n                                                data for the application.\r\n                                            </li>\r\n                                        </ul>\r\n                                        As long as your software application\r\n                                        adheres to the client-server\r\n                                        architecture (i.e. a client can send and\r\n                                        receive data to an API on a server) you\r\n                                        are free to build whatever user\r\n                                        interface you want on whatever platform\r\n                                        you want. This is advantageous as modern\r\n                                        software application are expected to be\r\n                                        available across multiple platforms and\r\n                                        provide a consistent experience across\r\n                                        devices.\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <h3\r\n                                        id=\"Client-Server-Modal\"\r\n                                        className=\"mb-4 text-primary\"\r\n                                    >\r\n                                        Client Server Modal:\r\n                                    </h3>\r\n                                    <img\r\n                                        src=\"https://madooei.github.io/cs421_sp20_homepage/assets/client-server-2.png\"\r\n                                        alt=\"clien-server-example\"\r\n                                        width=\"800\"\r\n                                        height=\"600\"\r\n                                        style={{\r\n                                            padding: '0px 0px 40px 120px'\r\n                                        }}\r\n                                    />\r\n                                    <h4\r\n                                        className=\"px-4\"\r\n                                        style={{\r\n                                            lineHeight: 2,\r\n                                            color: '#888'\r\n                                        }}\r\n                                    >\r\n                                        The client-server model, or\r\n                                        client-server architecture, is a\r\n                                        distributed application framework\r\n                                        dividing tasks between servers and\r\n                                        clients, which either reside in the same\r\n                                        system or communicate through a computer\r\n                                        network or the Internet. The client\r\n                                        relies on sending a request to another\r\n                                        program in order to access a service\r\n                                        made available by a server. The server\r\n                                        runs one or more programs that share\r\n                                        resources with and distribute work among\r\n                                        clients. Client-server communication\r\n                                        typically adheres to the TCP/IP protocol\r\n                                        suite. TCP protocol maintains a\r\n                                        connection until the client and server\r\n                                        have completed the message exchange. TCP\r\n                                        protocol determines the best way to\r\n                                        distribute application data into packets\r\n                                        that networks can deliver, transfers\r\n                                        packets to and receives packets from the\r\n                                        network, and manages flow control and\r\n                                        retransmission of dropped or garbled\r\n                                        packets. Client requests are organized\r\n                                        and prioritized in a scheduling system,\r\n                                        which helps servers cope in the instance\r\n                                        of receiving requests from many distinct\r\n                                        clients in a short space of time. The\r\n                                        client-server approach enables any\r\n                                        general-purpose computer to expand its\r\n                                        capabilities by utilizing the shared\r\n                                        resources of other hosts. Popular\r\n                                        client-server applications include\r\n                                        email, the World Wide Web, and network\r\n                                        printing.\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <h3\r\n                                        id=\"Page-Replacement\"\r\n                                        className=\"mb-4 text-primary\"\r\n                                    >\r\n                                        Page Replacement:\r\n                                    </h3>\r\n                                    <h4\r\n                                        className=\"px-4\"\r\n                                        style={{\r\n                                            lineHeight: 2,\r\n                                            color: '#888'\r\n                                        }}\r\n                                    >\r\n                                        It is a procedure required when a\r\n                                        required page is not found in main\r\n                                        memory. So, a page in memory is replaced\r\n                                        with a page from disk. There are many\r\n                                        algorithms for this process like First\r\n                                        In First Out, Optimal Page replacement,\r\n                                        Least Recently Used(LRU), etc. We have\r\n                                        used LRU in our project. In this\r\n                                        algorithm new pages are replaced with\r\n                                        the pages that have not been used for\r\n                                        the longest time but staying in the\r\n                                        memory.\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <h3\r\n                                        id=\"Least-Recently-Used\"\r\n                                        className=\"mb-4 text-primary\"\r\n                                    >\r\n                                        Least Recently Used:\r\n                                    </h3>\r\n                                    <h4\r\n                                        className=\"px-4\"\r\n                                        style={{\r\n                                            lineHeight: 2,\r\n                                            color: '#888'\r\n                                        }}\r\n                                    >\r\n                                        Least Recently Used (LRU) algorithm is\r\n                                        used for memory management. According to\r\n                                        this method, the page which is least\r\n                                        recently used is replaced. Therefore, in\r\n                                        memory, any page that has been unused\r\n                                        for a longer period of time than the\r\n                                        others is replaced.\r\n                                        <br />\r\n                                        This idea is somewhat based on locality\r\n                                        of reference, that any page that has\r\n                                        been unused for a great amount of time\r\n                                        is more likely to remain unused.\r\n                                        Therefore, it is better to replace that\r\n                                        page.\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"card-body mb-4\">\r\n                                    <h3\r\n                                        id=\"Multithreading\"\r\n                                        className=\"mb-4 text-primary\"\r\n                                    >\r\n                                        Multithreading:\r\n                                    </h3>\r\n                                    <h4\r\n                                        className=\"px-4\"\r\n                                        style={{\r\n                                            lineHeight: 2,\r\n                                            color: '#888'\r\n                                        }}\r\n                                    >\r\n                                        Multithreading is a model of program\r\n                                        execution that allows for multiple\r\n                                        threads to be created within a process,\r\n                                        executing independently but concurrently\r\n                                        sharing process resources.\r\n                                        <br />A thread is an independent unit of\r\n                                        execution created within the context of\r\n                                        a process (or application that is being\r\n                                        executed). When multiple threads are\r\n                                        executing in a process at the same time,\r\n                                        we get the term “multithreading.” Think\r\n                                        of it as the application’s version of\r\n                                        multitasking.\r\n                                        <br />\r\n                                        <br />\r\n                                        The main reason for incorporating\r\n                                        threads into an application is to\r\n                                        improve its performance.\r\n                                        <ul className=\"mb-4 pt-2\">\r\n                                            <li className=\"mb-2\">\r\n                                                A web server will utilize\r\n                                                multiple threads to simultaneous\r\n                                                process requests for data at the\r\n                                                same time.\r\n                                            </li>\r\n                                            <li className=\"my-2\">\r\n                                                An image analysis algorithm will\r\n                                                spawn multiple threads at a time\r\n                                                and segment an image into\r\n                                                quadrants to apply filtering to\r\n                                                the image.\r\n                                            </li>\r\n                                            <li className=\"my-2\">\r\n                                                A ray-tracing application will\r\n                                                launch multiple threads to\r\n                                                compute the visual effects while\r\n                                                the main GUI thread draws the\r\n                                                final results.\r\n                                            </li>\r\n                                        </ul>\r\n                                        Performance can be expressed in multiple\r\n                                        ways: Multithreading also leads to\r\n                                        minimization and more efficient use of\r\n                                        computing resources. Application\r\n                                        responsiveness is improved as requests\r\n                                        from one thread do not block requests\r\n                                        from other threads. Additionally,\r\n                                        multithreading is less\r\n                                        resource-intensive than running multiple\r\n                                        processes at the same time. There is\r\n                                        much more overhead, time consumption,\r\n                                        and management involved in creating\r\n                                        processes as compared to creating and\r\n                                        managing threads.\r\n                                    </h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}